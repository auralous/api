enum PlatformName {
  youtube
  spotify
}

type Query {
  track(id: ID!): Track
  crossTracks(id: ID!): CrossTracks
  playlist(id: ID!): Playlist
  myPlaylists: [Playlist!]
  playlistTracks(id: ID!): [Track!]!
  searchTrack(query: String!): [Track!]!
}

type Mutation {
  playlistAddTracks(id: ID!, trackIds: [String!]!): Boolean!
  playlistCreate(name: String!, trackIds: [String!]!): Playlist!
}

type Track {
  id: ID!
  platform: PlatformName!
  externalId: ID!
  artists: [Artist!]!
  duration: Int!
  title: String!
  image: String!
  url: String!
}

type CrossTracks {
  id: ID!
  youtube: ID
  spotify: ID
}

type Artist {
  id: ID!
  platform: PlatformName!
  externalId: ID!
  name: String!
  image: String!
  url: String!
}

type Playlist {
  id: ID!
  platform: PlatformName!
  externalId: ID!
  name: String!
  image: String!
  url: String!
}
