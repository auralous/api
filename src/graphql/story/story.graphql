type Query {
  story(id: ID!): Story
  storyState(id: ID!): StoryState
  stories(creatorId: String): [Story!]
  exploreStories(by: String!): [Story!]!
  searchStories(query: String!, limit: Int): [Story!]!
}

type Mutation {
  createStory(text: String!, isPublic: Boolean!): Story!
  deleteStory(id: ID!): ID!
  pingStory(id: ID!): Boolean!
}

type Subscription {
  storyStateUpdated(id: ID!): StoryState
}

type Story {
  id: ID!
  text: String!
  isPublic: Boolean!
  image: String!
  creatorId: ID!
  createdAt: DateTime!
}

type StoryPermission {
  isViewable: Boolean!
  isQueueable: Boolean!
}

type StoryState {
  id: ID!
  userIds: [String!]!
  # Settings
  queueable: [String!]!
  permission: StoryPermission!
}
