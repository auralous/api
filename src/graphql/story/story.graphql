type Query {
  story(id: ID!): Story
  storyUsers(id: ID!): [String!]
  stories(id: ID!, next: String, limit: Int!): [Story!]!
  storiesOnMap(lng: Float!, lat: Float!, radius: Float!): [Story!]!
  storyLive(creatorId: String): Story
}

type Mutation {
  storyCreate(text: String!, isPublic: Boolean!, location: LocationInput, tracks: [ID!]!): Story!
  storyDelete(id: ID!): ID!
  storyChangeQueueable(id: ID!, userId: String!, isRemoving: Boolean!): Boolean!
  storyUnlive(id: ID!): Story!
  storyPing(id: ID!): Boolean!
  storySendInvites(id: ID!, invitedIds: [String!]!): Boolean!
}

input LocationInput {
  lng: Float!
  lat: Float!
}

type Subscription {
  storyUpdated(id: ID!): Story!
  storyUsersUpdated(id: ID!): [String!]!
}

type Story {
  id: ID!
  text: String!
  isPublic: Boolean!
  image: String!
  creatorId: ID!
  createdAt: DateTime!
  isLive: Boolean!
  queueable: [String!]!
}
